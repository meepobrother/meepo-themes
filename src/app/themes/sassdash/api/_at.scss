@function __base-at($collection, $props) {
    $length: length($collection);
    $is-list: type-of($collection)=='list';
    $result: ();
    @each $key in $props {
        @if ($is-list) {
            $key: __parse-float($key);
            $result: append($result, if(__is-index($key, $length), nth($collection, $key), null));
        }
        @else {
            $result: append($result, __get($collection, $key));
        }
    }
    @return $result;
}

@function __at($arguments...) {
    $collection: nth($arguments, 1);
    $length: if($collection, length($collection), 0);
    @if __is-length($length) {
        $collection: __to-iterable($collection);
    }
    @return __base-at($collection, __base-flatten($arguments, false, false, 2));
}

@function _at($args...) {
    @return call('__at', $args...);
}